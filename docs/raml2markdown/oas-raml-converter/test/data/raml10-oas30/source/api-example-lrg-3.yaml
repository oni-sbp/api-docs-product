#%RAML 1.0
title: DataCamelDataServiceAPI
version: 0.0.1
types:
  DataField:
    description: A single data field(column) with specified field name and field type
    type: object
    properties:
      name:
        type: string
      type:
        type: string
  ServiceSpec:
    type: object
    properties:
      serviceName:
        type: string
      userName:
        type: string
      accessToken:
        type: string
      dataFields:
        type: array
        items:
          type: DataField
  ServiceSchema:
    description: Same as ServiceSpec but without accessToken.
    type: object
    properties:
      serviceName:
        type: string
      userName:
        type: string
      dataFields:
        type: array
        items:
          type: DataField
  DataEntry:
    example:
      temp: 20.5
      time: 12565
    description: 'A single data entry(row) with any number of field-name, field-value pairs'
    type: object
    properties:
      //:
        type: Integer | Float | Location | Timestamp | String
  Status:
    description: The status code and message of the response after serving a request
    type: object
    properties:
      code:
        type: integer
      message:
        type: string
  SupportedType:
    description: Information (string) about various data types supported by the system
    enum:
      - integer
      - string
      - location
      - timestamp
      - float
    type: string
  Integer:
    description: 8-byte signed integer
    format: int64
    type: integer
  Float:
    description: 8-byte double precision floating-point
    format: double
    type: number
  Location:
    description: >-
      Signed degrees format Signed degrees format (DDD.dddd)

      A latitude or longitude with 8 decimal places pinpoints a location to
      within 1 millimeter,( 1/16 inch).

      Precede South latitudes and West longitudes with a minus sign. Latitudes
      range from -90 to 90. Longitudes range from -180 to 180.

      41.25,-120.9762 -31.96,115.84 90,0 (North Pole)
    pattern: >-
      ^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?),\s*[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)$
    type: string
  Timestamp:
    description: UNIX timestamp in milliseconds since 1970. (8 bytes)
    format: int64
    type: integer
  String:
    description: At least one and up to 160 characters
    minLength: 1
    maxLength: 160
    type: string
/types:
  get:
    description: Gets a list of types supported by the service API.
    responses:
      '200':
        body:
          application/json:
            example:
              - integer
              - float
              - location
              - timestamp
              - string
            type: array
            items:
              type: SupportedType
      '500':
        body:
          application/json:
            type: Status
/service:
  post:
    description: Creates a new service
    responses:
      '201':
        body:
          application/json:
            example:
              code: 201
              message: Successfully created
            type: Status
      '400':
        description: Bad Request Error
        body:
          application/json:
            type: Status
      '401':
        description: Unauthroized Error
        body:
          application/json:
            type: Status
      '500':
        description: Internal Server Error
        body:
          application/json:
            type: Status
    body:
      application/json:
        type: ServiceSpec
  '/{userName}/{serviceName}':
    uriParameters:
      userName: {}
      serviceName: {}
    get:
      description: >-
        Get the schema of a service(with name serviceName) of a user (with name
        userName).
      responses:
        '200':
          body:
            application/json:
              type: ServiceSchema
        '404':
          description: Not Found Error
          body:
            application/json:
              type: Status
        '500':
          description: Internal Server Error
          body:
            application/json:
              type: Status
    delete:
      description: Delete the service with name serviceName of a user with name userName.
      responses:
        '200':
          body:
            application/json:
              type: Status
        '401':
          description: Unauthroized Error
          body:
            application/json:
              type: Status
        '404':
          description: Not Found Error
          body:
            application/json:
              type: Status
        '500':
          description: Internal Server Error
          body:
            application/json:
              type: Status
    /entry:
      get:
        description: >-
          Gets all data entries from a service(with name serviceName) of a
          user(with name userName).
        responses:
          '200':
            body:
              application/json:
                example:
                  - xval: 1
                    yval: 2
                  - xval: 2
                    yval: 5
                description: >-
                  A list of data entries, each of which comprises a number of
                  name-value mappings corresponding to the data fields
                type: array
                items:
                  type: DataEntry
          '404':
            description: Not Found Error
            body:
              application/json:
                type: Status
          '500':
            description: Internal Server Error
            body:
              application/json:
                type: Status
      delete:
        description: >-
          Deletes all data entries from a service(with name serviceName) of a
          user(with name userName).
        responses:
          '200':
            body:
              application/json:
                type: Status
          '401':
            description: Unauthroized Error
            body:
              application/json:
                type: Status
          '404':
            description: Not Found Error
            body:
              application/json:
                type: Status
          '500':
            description: Internal Server Error
            body:
              application/json:
                type: Status
      post:
        description: >-
          Adds a single/list of data entry/entries to a service(with name
          serviceName) of a user(with name userName). Responds with all data
          entries of the service after the new addition.
        responses:
          '201':
            body:
              application/json:
                type: array
                items:
                  type: DataEntry
          '400':
            description: Bad Request Error
            body:
              application/json:
                type: Status
          '401':
            description: Unauthroized Error
            body:
              application/json:
                type: Status
          '404':
            description: Not Found Error
            body:
              application/json:
                type: Status
          '500':
            description: Internal Server Error
            body:
              application/json:
                type: Status
        body:
          application/json:
            type: array
            items:
              type: DataEntry
      '/{id}':
        uriParameters:
          id: {}
        delete:
          description: >-
            Deletes a single data entry by id. Responds with all data entries of
            the service after the deletion
          responses:
            '201':
              body:
                application/json:
                  type: array
                  items:
                    type: DataEntry
            '401':
              description: Unauthroized Error
              body:
                application/json:
                  type: Status
            '404':
              description: Not Found Error
              body:
                application/json:
                  type: Status
            '500':
              description: Internal Server Error
              body:
                application/json:
                  type: Status
        put:
          description: >-
            Updates a single data entry by id. Responds with all data entries of
            the service after the update.
          responses:
            '200':
              body:
                application/json:
                  type: array
                  items:
                    type: DataEntry
            '400':
              description: Bad Request Error
              body:
                application/json:
                  type: Status
            '401':
              description: Unauthroized Error
              body:
                application/json:
                  type: Status
            '404':
              description: Not Found Error
              body:
                application/json:
                  type: Status
            '500':
              description: Internal Server Error
              body:
                application/json:
                  type: Status
          body:
            application/json:
              type: DataEntry