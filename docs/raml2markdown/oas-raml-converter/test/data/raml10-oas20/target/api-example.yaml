swagger: '2.0'
info:
  version: 1.0.0
  title: ZEncoder API
  description: Example API
host: zencoder.com
basePath: /api
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  oauth2:
    type: oauth2
    flow: application
    scopes:
      'write:pets': ''
      'read:pets': ''
    description: my oauth 2.0 security scheme.
    tokenUrl: 'https://api.dropbox.com/1/oauth2/token'
  oauth22:
    type: oauth2
    flow: implicit
    scopes: {}
    description: my oauth 2.0 security scheme. Version 2.
    authorizationUrl: 'http://swagger2.io/api/oauth/dialog'
  basicAuth:
    type: basic
    description: HTTP Basic Authentication. Works over `HTTP` and `HTTPS`
  basicAuth2:
    type: basic
    description: HTTP Basic Authentication. Works over `HTTP` and `HTTPS`. Version 2.
  internalApiKey:
    name: api_key
    type: apiKey
    in: header
    description: Api Key Authentication
  internalApiKey2:
    name: api_key2
    type: apiKey
    in: header
    description: Api Key Authentication. Version 2.
  internalApiKey3:
    name: api_key3
    type: apiKey
    in: query
    description: Api Key Authentication. Version 3.
  internalApiKey4:
    name: api_key4
    type: apiKey
    in: query
    description: Api Key Authentication. Version 4.
paths:
  /employees:
    post:
      operationId: POST_employees
      parameters:
        - name: reviews
          in: header
          description: EmployeeÂ´s reviews
          required: true
          type: array
          items:
            type: string
        - name: names
          in: header
          required: true
          type: string
        - name: nicknames
          in: header
          type: string
        - name: age
          in: header
          type: integer
      responses:
        default:
          description: ''
    get:
      operationId: GET_employees
      consumes:
        - text/xml
        - application/xml
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        default:
          description: ''
definitions:
  pet:
    type: string